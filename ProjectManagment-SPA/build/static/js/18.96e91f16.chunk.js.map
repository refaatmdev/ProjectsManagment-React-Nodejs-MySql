{"version":3,"sources":["components/customizeComponents/MainCard.tsx","components/Salaries/SalariesDataTable.tsx","pages/Salaries/index.tsx"],"names":["headerSX","p","& .MuiCardHeader-action","m","alignSelf","React","_ref","ref","_ref$border","border","boxShadow","children","subheader","_ref$content","content","_ref$contentSX","contentSX","darkTitle","_ref$divider","divider","elevation","secondary","shadow","_ref$sx","sx","mainColor","title","_ref$modal","modal","others","Object","_Users_refaatmulla_RafeDeveloper_new_dashboard_ProjectManagment_SPA_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","theme","useTheme","palette","mode","react__WEBPACK_IMPORTED_MODULE_8__","_mui_material__WEBPACK_IMPORTED_MODULE_3__","assign","_Users_refaatmulla_RafeDeveloper_new_dashboard_ProjectManagment_SPA_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","position","borderRadius","borderColor",":hover","top","left","transform","width","xs","sm","& .MuiCardContent-root","overflowY","minHeight","maxHeight","_mui_material__WEBPACK_IMPORTED_MODULE_4__","style","backgroundColor","color","titleTypographyProps","variant","action","_mui_material__WEBPACK_IMPORTED_MODULE_5__","_mui_material__WEBPACK_IMPORTED_MODULE_6__","_mui_material__WEBPACK_IMPORTED_MODULE_7__","SalariesDataTable","withReactContent","Swal","data","path","_useState","useState","_useState2","slicedToArray","total","setTotal","_useState3","_useState4","totalOfAllSalaries","setTotalOfAllSalaries","useEffect","getTotalOfAllSalaries","map","t","reduce","acc","value","Number","getTotalOfSalariesByMonth","salary","react_default","a","createElement","Fragment","Box","height","display","tableLayout","TableContainer","Table","minWidth","aria-label","TableHead","TableRow","TableCell","pl","align","TableBody","Array","isArray","row","index","hover","key","dayjs","salaryDate","format","firstName","lastName","duration","toFixed","dailyWage","currency_format_default","displayType","thousandSeparator","prefix","TableFooter","MySwal","Salaries","_useAppSelector","useAppSelector","state","records","salaries","employeeSalaries","dispatch","isLoadingSalaries","useAppDispatch","calculateMonth","setCalculateMonth","salariesMonth","setSalariesMonth","getAllSalaries","getSalaryByMonth","month","handelDateValueChangedCalculate","useCallback","e","handelDateValueChangedSalaries","startOf","handelShowSalarie","Grid","container","rowSpacing","columnSpacing","item","lg","md","MainCard","error","light","AttachMoney_default","fontSize","justifyContent","Stack","spacing","Typography","Divider","LocalizationProvider","dateAdapter","AdapterDayjs","styles","DatePicker","openTo","views","label","onChange","renderInput","params","TextField","helperText","Button","onClick","fire","concat","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","calculateSalary","unwrap","catch","msg","type","warning","Salaries_SalariesDataTable","primary"],"mappings":"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","file":"static/js/18.96e91f16.chunk.js","sourcesContent":["import { red } from \"@ant-design/colors\";\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardContentProps,\n  CardHeader,\n  CardHeaderProps,\n  CardMedia,\n  CardProps,\n  Divider,\n  IconButton,\n  Typography,\n  useTheme,\n} from \"@mui/material\";\nimport { CSSProperties } from \"@mui/material/styles/createTypography\";\nimport * as React from \"react\";\nimport { PropsWithChildren, ReactNode } from \"react\";\n\ninterface Props extends PropsWithChildren {\n  border?: boolean;\n  boxShadow?: boolean;\n  subheader?: ReactNode | string;\n  style?: CSSProperties;\n  content?: boolean;\n  contentSX?: CardContentProps[\"sx\"];\n  darkTitle?: boolean;\n  mainColor?: string;\n  divider?: boolean;\n  sx?: CardProps[\"sx\"];\n  secondary?: CardHeaderProps[\"action\"];\n  shadow?: string;\n  elevation?: number;\n  title?: ReactNode | string;\n  modal?: boolean;\n}\nconst headerSX = {\n  p: 2.5,\n  \"& .MuiCardHeader-action\": { m: \"0px auto\", alignSelf: \"center\" },\n};\n\nfunction MainCardRef(\n  {\n    border = true,\n    boxShadow,\n    children,\n    subheader,\n    content = true,\n    contentSX = {},\n    darkTitle,\n    divider = true,\n    elevation,\n    secondary,\n    shadow,\n    sx = {},\n    mainColor,\n    title,\n    modal = false,\n    ...others\n  }: Props,\n  ref: React.Ref<HTMLDivElement>\n) {\n  const theme = useTheme();\n  boxShadow = theme.palette.mode === \"dark\" ? boxShadow || true : boxShadow;\n\n  return (\n    <Card\n      elevation={elevation || 0}\n      ref={ref}\n      {...others}\n      sx={{\n        position: \"relative\",\n        border: border ? \"1px solid\" : \"none\",\n        borderRadius: 1,\n        borderColor:\n          theme.palette.mode === \"dark\" ? theme.palette.divider : \"#E6EBF1\",\n        boxShadow:\n          boxShadow && (!border || theme.palette.mode === \"dark\")\n            ? shadow\n            : \"inherit\",\n        \":hover\": {\n          boxShadow: boxShadow ? shadow : \"inherit\",\n        },\n        ...(modal && {\n          position: \"absolute\" as \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%, -50%)\",\n          width: { xs: `calc( 100% - 50px)`, sm: \"auto\" },\n          \"& .MuiCardContent-root\": {\n            overflowY: \"auto\",\n            minHeight: \"auto\",\n            maxHeight: `calc(100vh - 200px)`,\n          },\n        }),\n        ...sx,\n      }}\n    >\n      {/* card header and action */}\n      {!darkTitle && title && (\n        <CardHeader\n          style={{\n            backgroundColor: mainColor,\n            color: mainColor ? \"white\" : \"\",\n          }}\n          sx={headerSX}\n          titleTypographyProps={{ variant: \"h6\" }}\n          title={title}\n          action={secondary}\n          subheader={subheader}\n        />\n      )}\n      {darkTitle && title && (\n        <CardHeader\n          sx={headerSX}\n          title={<Typography variant=\"h2\">{title}</Typography>}\n          action={secondary}\n        />\n      )}\n\n      {/* content & header divider */}\n      {title && divider && <Divider />}\n\n      {/* card content */}\n      {content && <CardContent sx={contentSX}>{children}</CardContent>}\n      {!content && children}\n    </Card>\n  );\n}\n\nexport default React.forwardRef(MainCardRef);\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Stack,\n  IconButton,\n  TableFooter,\n} from \"@mui/material\";\nimport { IMafrea } from \"../../_interfaces/mafrea.interfac\";\nimport dayjs from \"dayjs\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { DeleteOutlined, EditOutlined } from \"@mui/icons-material\";\nimport { IEmployee } from \"../../_interfaces/emplyee.interface\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport EmployeeAction from \"../Employees/EmployeeAction\";\nimport { deleteMafrea } from \"../../store/recordsSlice\";\nimport { useLocation } from \"react-router-dom\";\nconst MySwal = withReactContent(Swal);\n\ninterface ISalariesDataTableProps {\n  data: any[];\n  path: string;\n}\nconst SalariesDataTable = ({ data, path }: ISalariesDataTableProps) => {\n  const [total, setTotal] = useState(0);\n  const [totalOfAllSalaries, setTotalOfAllSalaries] = useState(0);\n\n  useEffect(() => {\n    const getTotalOfAllSalaries = data\n      .map((t: any) => t.total)\n      .reduce((acc: any, value: any) => acc + Number(value), 0);\n    setTotal(getTotalOfAllSalaries);\n\n    const getTotalOfSalariesByMonth = data\n      .map((t: any) => t.salary)\n      .reduce((acc: any, value: any) => acc + Number(value), 0);\n    setTotalOfAllSalaries(getTotalOfSalariesByMonth);\n  }, [data, totalOfAllSalaries, total]);\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: \"100%\",\n          height: \"400px\",\n          display: \"table\",\n          tableLayout: \"fixed\",\n        }}\n      >\n        <TableContainer>\n          <Table sx={{ minWidth: 350 }} aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell sx={{ pl: 3 }}>#</TableCell>\n                <TableCell align=\"center\">תאריך</TableCell>\n                {path === \"Employees\" && (\n                  <>\n                    <TableCell align=\"center\"> שם עובד</TableCell>\n                    <TableCell align=\"center\">ימי עבודה</TableCell>\n                    <TableCell align=\"center\">שכר עבודה</TableCell>\n                  </>\n                )}\n                <TableCell align=\"center\">סכום</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {Array.isArray(data) &&\n                data.map((row, index) => {\n                  return (\n                    <TableRow hover key={index}>\n                      <TableCell align=\"center\">{index + 1}</TableCell>\n                      <TableCell align=\"center\">\n                        {dayjs(row.salaryDate).format(\"YYYY-MM-DD\")}\n                      </TableCell>\n                      {row.firstName && (\n                        <TableCell align=\"center\">\n                          {row.firstName + \" \" + row.lastName}{\" \"}\n                        </TableCell>\n                      )}\n\n                      {row.duration && (\n                        <TableCell align=\"center\">\n                          {(row.duration / 8.5).toFixed(3)}\n                        </TableCell>\n                      )}\n\n                      {row.dailyWage && (\n                        <TableCell align=\"center\">\n                          <CurrencyFormat\n                            value={row.dailyWage}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"₪\"}\n                          />\n                        </TableCell>\n                      )}\n                      {row.total && (\n                        <TableCell align=\"center\">\n                          <CurrencyFormat\n                            value={row.total}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"₪\"}\n                          />\n                        </TableCell>\n                      )}\n                      {row.salary && (\n                        <TableCell align=\"center\">\n                          <CurrencyFormat\n                            value={row.salary}\n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"₪\"}\n                          />\n                        </TableCell>\n                      )}\n                    </TableRow>\n                  );\n                })}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TableCell></TableCell>\n                {path === \"Employees\" && (\n                  <>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                    <TableCell></TableCell>\n                  </>\n                )}\n                <TableCell align=\"right\">סך הכל</TableCell>\n                <TableCell align=\"center\">\n                  {path === \"Employees\" ? (\n                    <CurrencyFormat\n                      value={totalOfAllSalaries}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"₪\"}\n                    />\n                  ) : (\n                    <CurrencyFormat\n                      value={total}\n                      displayType={\"text\"}\n                      thousandSeparator={true}\n                      prefix={\"₪\"}\n                    />\n                  )}\n                </TableCell>\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </TableContainer>\n      </Box>\n    </>\n  );\n};\n\nexport default SalariesDataTable;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  TextField,\n  Stack,\n  Divider,\n} from \"@mui/material\";\nimport MainCard from \"../../components/customizeComponents/MainCard\";\nimport theme from \"../../theme/theme\";\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport dayjs from \"dayjs\";\nimport {\n  calculateSalary,\n  getAllSalaries,\n  getSalaryByMonth,\n} from \"../../store/recordsSlice\";\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks\";\nimport SalariesDataTable from \"../../components/Salaries/SalariesDataTable\";\nimport { msg } from \"../../store/snackBardSlice\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport Swal from \"sweetalert2\";\n\nconst MySwal = withReactContent(Swal);\n\nconst Salaries = () => {\n  const { salaries, employeeSalaries, isLoadingSalaries } = useAppSelector(\n    (state) => state.records\n  );\n  const dispatch = useAppDispatch();\n\n  const [calculateMonth, setCalculateMonth] = useState(dayjs().format());\n  const [salariesMonth, setSalariesMonth] = useState(dayjs().format());\n\n  useEffect(() => {\n    dispatch(getAllSalaries());\n    dispatch(getSalaryByMonth({ month: salariesMonth }));\n  }, [dispatch]);\n\n  const handelDateValueChangedCalculate = useCallback(\n    (e: any) => {\n      setCalculateMonth(dayjs(e).format(\"YYYY-MM-DD HH:mm:ss\"));\n    },\n    [calculateMonth]\n  );\n\n  const handelDateValueChangedSalaries = useCallback(\n    (e: any) => {\n      setSalariesMonth(dayjs(e).startOf(\"month\").format(\"YYYY-MM-DD HH:mm:ss\"));\n    },\n    [salariesMonth]\n  );\n\n  const handelCalaculateSalaries = () => {\n    MySwal.fire({\n      title: `האם אתה בטוח שרוצה לעשות עיבוד לחודש ${dayjs(\n        calculateMonth\n      ).format(\"YYYY-M\")}`,\n      text: \"פעולה זו עשויה לקחת קצת זמן\",\n      icon: \"question\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"כן, בצע עיבוד!\",\n      cancelButtonText: \"בטל\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(calculateSalary(calculateMonth))\n          .unwrap()\n          .then(() => {\n            MySwal.fire({\n              title: \"העיבוד הסתיים בהצלחה\",\n              text: `העיבוד הסתיים בהצלחה לחודש ${dayjs(calculateMonth).format(\n                \"YYYY-M\"\n              )}`,\n              icon: \"success\",\n              confirmButtonText: \"תודה!\",\n            });\n            dispatch(getAllSalaries());\n          })\n          .catch(() => {\n            dispatch(msg({ msg: \"עיבוד דיווחות נכשל!!\", type: \"error\" }));\n          });\n      }\n    });\n  };\n\n  const handelShowSalarie = useCallback(() => {\n    dispatch(getSalaryByMonth({ month: salariesMonth }));\n  }, [salariesMonth]);\n\n  return (\n    <>\n      <Grid container rowSpacing={4.5} columnSpacing={3}>\n        <Grid item xs={12} lg={6} md={6}>\n          <MainCard\n            title=\"עיבוד משכורות\"\n            mainColor={theme.palette.error.light}\n            secondary={<AttachMoneyIcon fontSize=\"small\" />}\n            contentSX={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Stack spacing={2} width={\"100%\"}>\n              <Typography>נא לבחור חודש לעיבוד</Typography>\n              <Divider />\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                styles={{ width: \"100%\" }}\n              >\n                <DatePicker\n                  openTo=\"month\"\n                  views={[\"year\", \"month\"]}\n                  label=\"בחר תאריך\"\n                  value={calculateMonth}\n                  onChange={(e) => handelDateValueChangedCalculate(e)}\n                  renderInput={(params) => (\n                    <TextField {...params} helperText={null} />\n                  )}\n                />\n              </LocalizationProvider>\n              <Button onClick={handelCalaculateSalaries}>בצע עיבוד </Button>\n            </Stack>\n          </MainCard>\n        </Grid>\n        <Grid item xs={12} lg={6} md={6}>\n          <MainCard\n            title=\"הצגת משכורות\"\n            mainColor={theme.palette.error.light}\n            secondary={<AttachMoneyIcon fontSize=\"small\" />}\n            contentSX={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            <Stack spacing={2} width={\"100%\"}>\n              <Typography>נא לבחור חודש להצגה</Typography>\n              <Divider />\n              <LocalizationProvider\n                dateAdapter={AdapterDayjs}\n                styles={{ width: \"100%\" }}\n              >\n                <DatePicker\n                  openTo=\"month\"\n                  views={[\"year\", \"month\"]}\n                  label=\"בחר תאריך\"\n                  value={salariesMonth}\n                  onChange={(e) => handelDateValueChangedSalaries(e)}\n                  renderInput={(params) => (\n                    <TextField {...params} helperText={null} />\n                  )}\n                />\n              </LocalizationProvider>\n\n              <Button onClick={handelShowSalarie}>הצג משכורות</Button>\n            </Stack>\n          </MainCard>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <MainCard\n            title=\"סיכום משכורות\"\n            mainColor={theme.palette.warning.light}\n            secondary={<AttachMoneyIcon fontSize=\"small\" />}\n            contentSX={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            {salaries && <SalariesDataTable path=\"Salaries\" data={salaries} />}\n          </MainCard>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <MainCard\n            title=\"משכורות לחודש\"\n            mainColor={theme.palette.primary.light}\n            secondary={<AttachMoneyIcon fontSize=\"small\" />}\n            contentSX={{ display: \"flex\", justifyContent: \"center\" }}\n          >\n            {employeeSalaries && (\n              <SalariesDataTable path=\"Employees\" data={employeeSalaries} />\n            )}\n          </MainCard>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Salaries;\n"],"sourceRoot":""}