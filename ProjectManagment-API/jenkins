            node{
                stage("SCM CheckOut"){
                    git branch: 'main', credentialsId: 'git-cerdts', url: 'https://github.com/rafemu/projectMangmentDocker'
                }
                stage('Clearing old containers'){
                    sh '''echo ">>>>>>>>> Start Clearing old containers "
                        if docker ps -a | grep "pms-morsel*" | awk \'{print $1}\' | xargs docker rm -f; then
                            printf \'Clearing old containers done succeeded\\n\'
                        else
                            printf \'Clearing old containers failed\\n\'
                        fi'''
                }
                stage('Clearing old docker images'){
                    sh '''echo ">>>>>>>>> Start Clearing old docker images"
                        if docker images -a | grep "pms-morsel*" | awk \'{print $1":"$2}\' | xargs docker rmi -f; then
                            printf \'Clearing old images succeeded\\n\'
                        else
                            printf \'Clearing old images failed\\n\'
                        fi'''
                }
                stage('Build Docker Image'){
                    sh 'docker build -t rafemu/pms-morselhub:pms-morsel$BUILD_NUMBER .'
                }
                
                stage('Push docker Image'){
                    withCredentials([string(credentialsId: 'dockerHub-pwd', variable: 'dockerHubPwd')]) {
                    sh "docker login -u rafemu -p ${dockerHubPwd}"
                    }   
                    sh 'docker push rafemu/pms-morselhub:pms-morsel$BUILD_NUMBER'
                }
                stage('Run Container'){
                    def dockerCompose = "step([\$class: 'DockerComposeBuilder', dockerComposeFile: 'docker-compose.yml', option: [\$class: 'StartAllServices'], useCustomDockerComposeFile: true])"
                    sshagent(['dev-server']) {
                            sh 'ssh -o StrictHostKeyChecking=no ec2-user@18.196.82.63'
                    }
            }
        }